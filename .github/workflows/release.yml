name: RELEASE

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write
  deployments: write
  checks: write
  pages: write
  id-token: write

concurrency:
  group: 'release'
  cancel-in-progress: false

jobs:
  release:
    name: Manage Release
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release-please.outputs.release_created }}
    steps:
      - name: Release
        uses: googleapis/release-please-action@v4
        id: release-please
        with:
          token: ${{ secrets.GH_PAT }}
          release-type: node

  deploy-to-production:
    name: Deploy to Production
    if: ${{ needs.release.outputs.release_created }}
    runs-on: ubuntu-latest
    needs: release
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - uses: pnpm/action-setup@v4
        with:
          run_install: false

      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'pnpm'
          cache-dependency-path: pnpm-lock.yaml

      - run: pnpm install

      - run: pnpm sst deploy --stage production
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          CLOUDFLARE_DOMAIN_NAME: ${{ secrets.CLOUDFLARE_DOMAIN_NAME }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_DEFAULT_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_DEFAULT_ACCOUNT_ID }}
